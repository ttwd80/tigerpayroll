package com.github.ttwd80.tigerpayroll.model.entity;


import java.math.BigDecimal;
import java.time.ZonedDateTime;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ChildSupportPercetage generated by hbm2java
 */
@Entity
@Table(name="child_support_percetage"
    ,schema="public"
)
public class ChildSupportPercetage  implements java.io.Serializable {


     private Integer id;
     private BigDecimal amount;
     private String createdBy;
     private String lastModifiedBy;
     private ZonedDateTime createdDate;
     private ZonedDateTime lastModifiedDate;
     private Set<User> usersForChildSupportD = new HashSet<User>(0);
     private Set<User> usersForChildSupportC = new HashSet<User>(0);
     private Set<User> usersForChildSupportB = new HashSet<User>(0);
     private Set<User> usersForChildSupportA = new HashSet<User>(0);
     private Set<User> usersForChildSupportE = new HashSet<User>(0);

    public ChildSupportPercetage() {
    }

	
    public ChildSupportPercetage(Integer id, BigDecimal amount) {
        this.id = id;
        this.amount = amount;
    }
    public ChildSupportPercetage(Integer id, BigDecimal amount, String createdBy, String lastModifiedBy, ZonedDateTime createdDate, ZonedDateTime lastModifiedDate, Set<User> usersForChildSupportD, Set<User> usersForChildSupportC, Set<User> usersForChildSupportB, Set<User> usersForChildSupportA, Set<User> usersForChildSupportE) {
       this.id = id;
       this.amount = amount;
       this.createdBy = createdBy;
       this.lastModifiedBy = lastModifiedBy;
       this.createdDate = createdDate;
       this.lastModifiedDate = lastModifiedDate;
       this.usersForChildSupportD = usersForChildSupportD;
       this.usersForChildSupportC = usersForChildSupportC;
       this.usersForChildSupportB = usersForChildSupportB;
       this.usersForChildSupportA = usersForChildSupportA;
       this.usersForChildSupportE = usersForChildSupportE;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="amount", nullable=false, precision=5)
    public BigDecimal getAmount() {
        return this.amount;
    }
    
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    
    @Column(name="created_by", length=20)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    
    @Column(name="last_modified_by", length=20)
    public String getLastModifiedBy() {
        return this.lastModifiedBy;
    }
    
    public void setLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }

    
    @Column(name="created_date", length=35)
    @org.springframework.data.annotation.CreatedDate
    public ZonedDateTime getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(ZonedDateTime createdDate) {
        this.createdDate = createdDate;
    }

    
    @Column(name="last_modified_date", length=35)
    @org.springframework.data.annotation.LastModifiedDate
    public ZonedDateTime getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    
    public void setLastModifiedDate(ZonedDateTime lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="childSupportPercetageByChildSupportD")
    public Set<User> getUsersForChildSupportD() {
        return this.usersForChildSupportD;
    }
    
    public void setUsersForChildSupportD(Set<User> usersForChildSupportD) {
        this.usersForChildSupportD = usersForChildSupportD;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="childSupportPercetageByChildSupportC")
    public Set<User> getUsersForChildSupportC() {
        return this.usersForChildSupportC;
    }
    
    public void setUsersForChildSupportC(Set<User> usersForChildSupportC) {
        this.usersForChildSupportC = usersForChildSupportC;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="childSupportPercetageByChildSupportB")
    public Set<User> getUsersForChildSupportB() {
        return this.usersForChildSupportB;
    }
    
    public void setUsersForChildSupportB(Set<User> usersForChildSupportB) {
        this.usersForChildSupportB = usersForChildSupportB;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="childSupportPercetageByChildSupportA")
    public Set<User> getUsersForChildSupportA() {
        return this.usersForChildSupportA;
    }
    
    public void setUsersForChildSupportA(Set<User> usersForChildSupportA) {
        this.usersForChildSupportA = usersForChildSupportA;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="childSupportPercetageByChildSupportE")
    public Set<User> getUsersForChildSupportE() {
        return this.usersForChildSupportE;
    }
    
    public void setUsersForChildSupportE(Set<User> usersForChildSupportE) {
        this.usersForChildSupportE = usersForChildSupportE;
    }




}


